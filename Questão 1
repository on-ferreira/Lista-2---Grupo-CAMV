// Jogo da Vida
#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <math.h>
#include <string.h>
#include <conio.h> 

Menu [Dar opções para ir ao IniRad ou ao IniUser] // JP
IniRand [inicializar a matriz de forma randomica] // Orlando
IniUser [Checar input] // JP
NumGenerations [Chamar essa função após as funções Ini] // JP
O JOGO [Chamar a função checar vizinhos e depois imprimir o resultado]// JP
ChecarVizinhos [Usar uma "matriz auxiliar" pra ajudar no calculo de celular viva ou morta] // Tobias



int main() 
{
	setlocale (LC_ALL, "");
	
	//system("color 86");
	//system("color 8E");

	return 0;
}

void menu()
{
	int opcao;
	printf("\n--------------------Escolha a forma de jogo--------------------");
	printf("\n 1 - Inicialização Randômica.");
	printf("\n 2 - Escolha onde se localizarão as células vivas. ");	
	printf("\n 0 - Sair \n");
	printf("\n\nDigite a opção desejada: ");
	scanf("%d",&opcao);
	switch(opcao)
	{
		case 1:
			{
				IniRand();
			}
			break;
		case 2:
			{
				IniUser();
			}
			break;
		case 0:
			{
				Exit();
			}
			break;
		default: 
			{
				printf("\nOpção não encontrada! Digite novamente!");
				menu(opcao);
			}
	}
}

void IniUser(int linha, int coluna)
{
	while(1)
	{
	printf("Digite a linha e a coluna em que deseja posicionar uma célula viva: ");
	scanf("%d %d", &linha, &coluna);
	if(linha == -1 && coluna == -1)
		break;
	else if  (linha <1 | | linha >30 | | coluna <1 | | coluna>30)
		printf("Posição inválida, tente outra vez!");
	else
		MVelha[linha][coluna] = 1;
	}	
}
